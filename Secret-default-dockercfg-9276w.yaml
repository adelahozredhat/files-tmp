apiVersion: v1
data:
    .dockercfg: {"10.217.5.115:5000":{"username":"serviceaccount","password":"eyJhbGciOiJSUzI1NiIsImtpZCI6IkphUXFpQnlSOEpJQmp1elRKN3hRSWxPYkdzc2RsVjFaYXl1OGZZU04yd3cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYXAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1rcjU5NCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWVmYjI5M2ItMGE3ZC00MmQwLTkxM2MtODgxMWU0ZTg0YjBlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFhcDpkZWZhdWx0In0.DxJCNZgi0aWPAmEdCx9eyfm3CsTf4olf17aiNGAybh5EomPy0goYZ8cx1C0uk6kU3qReTirFktZe6pdA3Ntrbaj9ENDDJNZiP7vWRyf3F0dcgzhHte4lB_Z6zo6IoelcVcFjgdIrJPqErbYw_BZJqeGV4ozdM5bWQVFM3De3mS-dmA0rvdvDcqmindr2hcvCiSMfGeLiYqy_TU8X7fKh317Cqii1AGQaL96bi8jAb16VF62UtWKSvqPiDCY1rnsxCQ6UhQuipnWUkNH0Qw3F1XVEyGg7drf6YD5qaBisXYFRRQe4W-25bk2kTmGGgOjZUDfCDSSRzOt9bqRky6LCLntXfuybF7fY0aRJoyN_n-dzL4XY5yEIxKbuytXqIka-j0rEEJVUNCllPmzhSufdk-NEiL6zGHtyt3Rn-nagKtsTpuOI-EDUVotlZ2kc-KQ9XegE3zc3X3T7tQDexbRsRb1y7DGoRhYZTxgYvFbY7M5LyLOyZtnRlvJ0mfVUdm_jnxz-apI9md5wlEc1luBx7EDQ9IYzSmw5tKDbpYz8ft5Fkf8GxzBVNrfk0moXF5HbeXOOjxzEwhc207P4EvbpLg4lkZf9Xr4W0-LlnylQdQHLa2dCVmjM3A4eMCkMpM1SD8NdvUqsH0jmpyp5DDiStFRBJakR4xA7lNyUk4gEfa4","email":"serviceaccount@example.org","auth":"c2VydmljZWFjY291bnQ6ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrcGhVWEZwUW5sU09FcEpRbXAxZWxSS04zaFJTV3hQWWtkemMyUnNWakZhWVhsMU9HWlpVMDR5ZDNjaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpoWVhBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVm1ZWFZzZEMxMGIydGxiaTFyY2pVNU5DSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVpXVm1Zakk1TTJJdE1HRTNaQzAwTW1Rd0xUa3hNMk10T0RneE1XVTBaVGcwWWpCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbUZoY0Rwa1pXWmhkV3gwSW4wLkR4SkNOWmdpMGFXUEFtRWRDeDlleWZtM0NzVGY0b2xmMTdhaU5HQXliaDVFb21QeTBnb1laOGN4MUMwdWs2a1UzcVJlVGlyRmt0WmU2cGRBM050cmJhajlFTkRESk5aaVA3dldSeWYzRjBkY2d6aEh0ZTRsQl9aNnpvNklvZWxjVmNGamdkSXJKUHFFcmJZd19CWkpxZUdWNG96ZE01YldRVkZNM0RlM21TLWRtQTBydmR2RGNxbWluZHIyaGN2Q2lTTWZHZUxpWXF5X1RVOFg3ZktoMzE3Q3FpaTFBR1FhTDk2Ymk4akFiMTZWRjYyVXRXS1N2cVBpRENZMXJuc3hDUTZVaFF1aXBuV1VrTkgwUXczRjFYVkV5R2c3ZHJmNllENXFhQmlzWFlGUlJRZTRXLTI1Ymsya1RtR0dnT2paVURmQ0RTU1J6T3Q5YnFSa3k2TENMbnRYZnV5YkY3ZlkwYVJKb3lOX24tZHpMNFhZNXlFSXhLYnV5dFhxSWthLWowckVFSlZVTkNsbFBtemhTdWZkay1ORWlMNnpHSHR5dDNSbi1uYWdLdHNUcHVPSS1FRFVWb3RsWjJrYy1LUTlYZWdFM3pjM1gzVDd0UURleGJSc1JiMXk3REdvUmhZWlR4Z1l2RmJZN001THlMT3ladG5SbHZKMG1mVlVkbV9qbnh6LWFwSTltZDV3bEVjMWx1Qng3RURROUlZelNtdzV0S0RicFl6OGZ0NUZrZjhHeHpCVk5yZmswbW9YRjVIYmVYT09qeHpFd2hjMjA3UDRFdmJwTGc0bGtaZjlYcjRXMC1MbG55bFFkUUhMYTJkQ1Ztak0zQTRlTUNrTXBNMVNEOE5kdlVxc0gwam1weXA1RERpU3RGUkJKYWtSNHhBN2xOeVVrNGdFZmE0"},"default-route-openshift-image-registry.apps-crc.testing":{"username":"serviceaccount","password":"eyJhbGciOiJSUzI1NiIsImtpZCI6IkphUXFpQnlSOEpJQmp1elRKN3hRSWxPYkdzc2RsVjFaYXl1OGZZU04yd3cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYXAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1rcjU5NCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWVmYjI5M2ItMGE3ZC00MmQwLTkxM2MtODgxMWU0ZTg0YjBlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFhcDpkZWZhdWx0In0.DxJCNZgi0aWPAmEdCx9eyfm3CsTf4olf17aiNGAybh5EomPy0goYZ8cx1C0uk6kU3qReTirFktZe6pdA3Ntrbaj9ENDDJNZiP7vWRyf3F0dcgzhHte4lB_Z6zo6IoelcVcFjgdIrJPqErbYw_BZJqeGV4ozdM5bWQVFM3De3mS-dmA0rvdvDcqmindr2hcvCiSMfGeLiYqy_TU8X7fKh317Cqii1AGQaL96bi8jAb16VF62UtWKSvqPiDCY1rnsxCQ6UhQuipnWUkNH0Qw3F1XVEyGg7drf6YD5qaBisXYFRRQe4W-25bk2kTmGGgOjZUDfCDSSRzOt9bqRky6LCLntXfuybF7fY0aRJoyN_n-dzL4XY5yEIxKbuytXqIka-j0rEEJVUNCllPmzhSufdk-NEiL6zGHtyt3Rn-nagKtsTpuOI-EDUVotlZ2kc-KQ9XegE3zc3X3T7tQDexbRsRb1y7DGoRhYZTxgYvFbY7M5LyLOyZtnRlvJ0mfVUdm_jnxz-apI9md5wlEc1luBx7EDQ9IYzSmw5tKDbpYz8ft5Fkf8GxzBVNrfk0moXF5HbeXOOjxzEwhc207P4EvbpLg4lkZf9Xr4W0-LlnylQdQHLa2dCVmjM3A4eMCkMpM1SD8NdvUqsH0jmpyp5DDiStFRBJakR4xA7lNyUk4gEfa4","email":"serviceaccount@example.org","auth":"c2VydmljZWFjY291bnQ6ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrcGhVWEZwUW5sU09FcEpRbXAxZWxSS04zaFJTV3hQWWtkemMyUnNWakZhWVhsMU9HWlpVMDR5ZDNjaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpoWVhBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVm1ZWFZzZEMxMGIydGxiaTFyY2pVNU5DSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVpXVm1Zakk1TTJJdE1HRTNaQzAwTW1Rd0xUa3hNMk10T0RneE1XVTBaVGcwWWpCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbUZoY0Rwa1pXWmhkV3gwSW4wLkR4SkNOWmdpMGFXUEFtRWRDeDlleWZtM0NzVGY0b2xmMTdhaU5HQXliaDVFb21QeTBnb1laOGN4MUMwdWs2a1UzcVJlVGlyRmt0WmU2cGRBM050cmJhajlFTkRESk5aaVA3dldSeWYzRjBkY2d6aEh0ZTRsQl9aNnpvNklvZWxjVmNGamdkSXJKUHFFcmJZd19CWkpxZUdWNG96ZE01YldRVkZNM0RlM21TLWRtQTBydmR2RGNxbWluZHIyaGN2Q2lTTWZHZUxpWXF5X1RVOFg3ZktoMzE3Q3FpaTFBR1FhTDk2Ymk4akFiMTZWRjYyVXRXS1N2cVBpRENZMXJuc3hDUTZVaFF1aXBuV1VrTkgwUXczRjFYVkV5R2c3ZHJmNllENXFhQmlzWFlGUlJRZTRXLTI1Ymsya1RtR0dnT2paVURmQ0RTU1J6T3Q5YnFSa3k2TENMbnRYZnV5YkY3ZlkwYVJKb3lOX24tZHpMNFhZNXlFSXhLYnV5dFhxSWthLWowckVFSlZVTkNsbFBtemhTdWZkay1ORWlMNnpHSHR5dDNSbi1uYWdLdHNUcHVPSS1FRFVWb3RsWjJrYy1LUTlYZWdFM3pjM1gzVDd0UURleGJSc1JiMXk3REdvUmhZWlR4Z1l2RmJZN001THlMT3ladG5SbHZKMG1mVlVkbV9qbnh6LWFwSTltZDV3bEVjMWx1Qng3RURROUlZelNtdzV0S0RicFl6OGZ0NUZrZjhHeHpCVk5yZmswbW9YRjVIYmVYT09qeHpFd2hjMjA3UDRFdmJwTGc0bGtaZjlYcjRXMC1MbG55bFFkUUhMYTJkQ1Ztak0zQTRlTUNrTXBNMVNEOE5kdlVxc0gwam1weXA1RERpU3RGUkJKYWtSNHhBN2xOeVVrNGdFZmE0"},"image-registry.openshift-image-registry.svc.cluster.local:5000":{"username":"serviceaccount","password":"eyJhbGciOiJSUzI1NiIsImtpZCI6IkphUXFpQnlSOEpJQmp1elRKN3hRSWxPYkdzc2RsVjFaYXl1OGZZU04yd3cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYXAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1rcjU5NCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWVmYjI5M2ItMGE3ZC00MmQwLTkxM2MtODgxMWU0ZTg0YjBlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFhcDpkZWZhdWx0In0.DxJCNZgi0aWPAmEdCx9eyfm3CsTf4olf17aiNGAybh5EomPy0goYZ8cx1C0uk6kU3qReTirFktZe6pdA3Ntrbaj9ENDDJNZiP7vWRyf3F0dcgzhHte4lB_Z6zo6IoelcVcFjgdIrJPqErbYw_BZJqeGV4ozdM5bWQVFM3De3mS-dmA0rvdvDcqmindr2hcvCiSMfGeLiYqy_TU8X7fKh317Cqii1AGQaL96bi8jAb16VF62UtWKSvqPiDCY1rnsxCQ6UhQuipnWUkNH0Qw3F1XVEyGg7drf6YD5qaBisXYFRRQe4W-25bk2kTmGGgOjZUDfCDSSRzOt9bqRky6LCLntXfuybF7fY0aRJoyN_n-dzL4XY5yEIxKbuytXqIka-j0rEEJVUNCllPmzhSufdk-NEiL6zGHtyt3Rn-nagKtsTpuOI-EDUVotlZ2kc-KQ9XegE3zc3X3T7tQDexbRsRb1y7DGoRhYZTxgYvFbY7M5LyLOyZtnRlvJ0mfVUdm_jnxz-apI9md5wlEc1luBx7EDQ9IYzSmw5tKDbpYz8ft5Fkf8GxzBVNrfk0moXF5HbeXOOjxzEwhc207P4EvbpLg4lkZf9Xr4W0-LlnylQdQHLa2dCVmjM3A4eMCkMpM1SD8NdvUqsH0jmpyp5DDiStFRBJakR4xA7lNyUk4gEfa4","email":"serviceaccount@example.org","auth":"c2VydmljZWFjY291bnQ6ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrcGhVWEZwUW5sU09FcEpRbXAxZWxSS04zaFJTV3hQWWtkemMyUnNWakZhWVhsMU9HWlpVMDR5ZDNjaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpoWVhBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVm1ZWFZzZEMxMGIydGxiaTFyY2pVNU5DSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVpXVm1Zakk1TTJJdE1HRTNaQzAwTW1Rd0xUa3hNMk10T0RneE1XVTBaVGcwWWpCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbUZoY0Rwa1pXWmhkV3gwSW4wLkR4SkNOWmdpMGFXUEFtRWRDeDlleWZtM0NzVGY0b2xmMTdhaU5HQXliaDVFb21QeTBnb1laOGN4MUMwdWs2a1UzcVJlVGlyRmt0WmU2cGRBM050cmJhajlFTkRESk5aaVA3dldSeWYzRjBkY2d6aEh0ZTRsQl9aNnpvNklvZWxjVmNGamdkSXJKUHFFcmJZd19CWkpxZUdWNG96ZE01YldRVkZNM0RlM21TLWRtQTBydmR2RGNxbWluZHIyaGN2Q2lTTWZHZUxpWXF5X1RVOFg3ZktoMzE3Q3FpaTFBR1FhTDk2Ymk4akFiMTZWRjYyVXRXS1N2cVBpRENZMXJuc3hDUTZVaFF1aXBuV1VrTkgwUXczRjFYVkV5R2c3ZHJmNllENXFhQmlzWFlGUlJRZTRXLTI1Ymsya1RtR0dnT2paVURmQ0RTU1J6T3Q5YnFSa3k2TENMbnRYZnV5YkY3ZlkwYVJKb3lOX24tZHpMNFhZNXlFSXhLYnV5dFhxSWthLWowckVFSlZVTkNsbFBtemhTdWZkay1ORWlMNnpHSHR5dDNSbi1uYWdLdHNUcHVPSS1FRFVWb3RsWjJrYy1LUTlYZWdFM3pjM1gzVDd0UURleGJSc1JiMXk3REdvUmhZWlR4Z1l2RmJZN001THlMT3ladG5SbHZKMG1mVlVkbV9qbnh6LWFwSTltZDV3bEVjMWx1Qng3RURROUlZelNtdzV0S0RicFl6OGZ0NUZrZjhHeHpCVk5yZmswbW9YRjVIYmVYT09qeHpFd2hjMjA3UDRFdmJwTGc0bGtaZjlYcjRXMC1MbG55bFFkUUhMYTJkQ1Ztak0zQTRlTUNrTXBNMVNEOE5kdlVxc0gwam1weXA1RERpU3RGUkJKYWtSNHhBN2xOeVVrNGdFZmE0"},"image-registry.openshift-image-registry.svc:5000":{"username":"serviceaccount","password":"eyJhbGciOiJSUzI1NiIsImtpZCI6IkphUXFpQnlSOEpJQmp1elRKN3hRSWxPYkdzc2RsVjFaYXl1OGZZU04yd3cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYXAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1rcjU5NCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWVmYjI5M2ItMGE3ZC00MmQwLTkxM2MtODgxMWU0ZTg0YjBlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFhcDpkZWZhdWx0In0.DxJCNZgi0aWPAmEdCx9eyfm3CsTf4olf17aiNGAybh5EomPy0goYZ8cx1C0uk6kU3qReTirFktZe6pdA3Ntrbaj9ENDDJNZiP7vWRyf3F0dcgzhHte4lB_Z6zo6IoelcVcFjgdIrJPqErbYw_BZJqeGV4ozdM5bWQVFM3De3mS-dmA0rvdvDcqmindr2hcvCiSMfGeLiYqy_TU8X7fKh317Cqii1AGQaL96bi8jAb16VF62UtWKSvqPiDCY1rnsxCQ6UhQuipnWUkNH0Qw3F1XVEyGg7drf6YD5qaBisXYFRRQe4W-25bk2kTmGGgOjZUDfCDSSRzOt9bqRky6LCLntXfuybF7fY0aRJoyN_n-dzL4XY5yEIxKbuytXqIka-j0rEEJVUNCllPmzhSufdk-NEiL6zGHtyt3Rn-nagKtsTpuOI-EDUVotlZ2kc-KQ9XegE3zc3X3T7tQDexbRsRb1y7DGoRhYZTxgYvFbY7M5LyLOyZtnRlvJ0mfVUdm_jnxz-apI9md5wlEc1luBx7EDQ9IYzSmw5tKDbpYz8ft5Fkf8GxzBVNrfk0moXF5HbeXOOjxzEwhc207P4EvbpLg4lkZf9Xr4W0-LlnylQdQHLa2dCVmjM3A4eMCkMpM1SD8NdvUqsH0jmpyp5DDiStFRBJakR4xA7lNyUk4gEfa4","email":"serviceaccount@example.org","auth":"c2VydmljZWFjY291bnQ6ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrcGhVWEZwUW5sU09FcEpRbXAxZWxSS04zaFJTV3hQWWtkemMyUnNWakZhWVhsMU9HWlpVMDR5ZDNjaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpoWVhBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVm1ZWFZzZEMxMGIydGxiaTFyY2pVNU5DSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVpXVm1Zakk1TTJJdE1HRTNaQzAwTW1Rd0xUa3hNMk10T0RneE1XVTBaVGcwWWpCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbUZoY0Rwa1pXWmhkV3gwSW4wLkR4SkNOWmdpMGFXUEFtRWRDeDlleWZtM0NzVGY0b2xmMTdhaU5HQXliaDVFb21QeTBnb1laOGN4MUMwdWs2a1UzcVJlVGlyRmt0WmU2cGRBM050cmJhajlFTkRESk5aaVA3dldSeWYzRjBkY2d6aEh0ZTRsQl9aNnpvNklvZWxjVmNGamdkSXJKUHFFcmJZd19CWkpxZUdWNG96ZE01YldRVkZNM0RlM21TLWRtQTBydmR2RGNxbWluZHIyaGN2Q2lTTWZHZUxpWXF5X1RVOFg3ZktoMzE3Q3FpaTFBR1FhTDk2Ymk4akFiMTZWRjYyVXRXS1N2cVBpRENZMXJuc3hDUTZVaFF1aXBuV1VrTkgwUXczRjFYVkV5R2c3ZHJmNllENXFhQmlzWFlGUlJRZTRXLTI1Ymsya1RtR0dnT2paVURmQ0RTU1J6T3Q5YnFSa3k2TENMbnRYZnV5YkY3ZlkwYVJKb3lOX24tZHpMNFhZNXlFSXhLYnV5dFhxSWthLWowckVFSlZVTkNsbFBtemhTdWZkay1ORWlMNnpHSHR5dDNSbi1uYWdLdHNUcHVPSS1FRFVWb3RsWjJrYy1LUTlYZWdFM3pjM1gzVDd0UURleGJSc1JiMXk3REdvUmhZWlR4Z1l2RmJZN001THlMT3ladG5SbHZKMG1mVlVkbV9qbnh6LWFwSTltZDV3bEVjMWx1Qng3RURROUlZelNtdzV0S0RicFl6OGZ0NUZrZjhHeHpCVk5yZmswbW9YRjVIYmVYT09qeHpFd2hjMjA3UDRFdmJwTGc0bGtaZjlYcjRXMC1MbG55bFFkUUhMYTJkQ1Ztak0zQTRlTUNrTXBNMVNEOE5kdlVxc0gwam1weXA1RERpU3RGUkJKYWtSNHhBN2xOeVVrNGdFZmE0"}}
kind: Secret
metadata:
    name: default-dockercfg-9276w
    namespace: aap
type: kubernetes.io/dockercfg
