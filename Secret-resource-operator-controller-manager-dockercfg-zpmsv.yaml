apiVersion: v1
data:
    .dockercfg: 
kind: Secret
metadata:
    managedFields:
    -   apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
            f:data:
                .: {}
                f:.dockercfg: {}
            f:metadata:
                f:annotations:
                    .: {}
                    f:kubernetes.io/service-account.name: {}
                    f:kubernetes.io/service-account.uid: {}
                    f:openshift.io/token-secret.name: {}
                    f:openshift.io/token-secret.value: {}
                f:ownerReferences:
                    .: {}
                    k:{"uid":"b0ba8bba-42bd-4352-899a-bfafec824f70"}: {}
            f:type: {}
        manager: openshift-controller-manager
        operation: Update
        time: '2024-02-09T08:35:00Z'
    name: resource-operator-controller-manager-dockercfg-zpmsv
    namespace: aap
type: kubernetes.io/dockercfg
