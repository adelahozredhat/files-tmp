apiVersion: v1
data:
    .dockercfg: 
kind: Secret
metadata:
    name: eda-server-operator-controller-manager-dockercfg-gbsps
    namespace: ansible-prod-axa-es
type: kubernetes.io/dockercfg
